# name: Comment Workflow

# on:
#   issue_comment:
#     types: [created]

# jobs:
#   generate-preview-url:
#     name: Preview Url
#     if: |
#       github.event.issue.pull_request &&
#       contains(github.event.comment.body, '/generate-preview-url')
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "Generate the url and stuff"

#   run-e2e-tests:
#     name: E2E Tests
#     if: |
#       github.event.issue.pull_request &&
#       contains(github.event.comment.body, '/run-e2e-tests')
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "Run the tests and stuff"

name: Dynamic Command Dispatcher

on:
  issue_comment:
    types: [created]

jobs:
  dispatch-jobs:
    name: Dispatch Dynamic Command Workflows
    if: github.event.issue.pull_request
    runs-on: ubuntu-latest
    steps:
      - name: Log Comment Content
        run: |
          echo "Comment content: '${{ github.event.comment.body }}'"

      - name: Parse Commands and Dispatch Workflows
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMENT="${{ github.event.comment.body }}"

          # Define command-to-workflow mapping
          declare -A command_to_workflow

          command_to_workflow["/preview"]="generate-preview-url.yml"
          command_to_workflow["/run-e2e"]="run-e2e-tests.yml"
          # Add more commands here as needed

          # Convert COMMENT to a set-like associative array for fast lookups
          declare -A words_set
          for word in $COMMENT; do
            words_set["$word"]=1
          done

          # Log the set-like associative array
          echo "Words received in comment: ‚¨áÔ∏è "
          for word in "${!words_set[@]}"; do
            echo "üëâ $word"
          done

          # Loop through commands and dispatch if present in words_set
          for command in "${!command_to_workflow[@]}"; do
            if [[ -n "${words_set[$command]}" ]]; then
              echo "Dispatching workflow for command: $command"
              
              # Trigger the associated workflow using GitHub API (curl)
              curl -X POST \
                -H "Authorization: token $GH_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                -d '{"ref": "${{ github.ref }}"}' \
                "https://api.github.com/repos/${{ github.repository }}/actions/workflows/${command_to_workflow[$command]}/dispatches"
            fi
          done
        shell: bash
